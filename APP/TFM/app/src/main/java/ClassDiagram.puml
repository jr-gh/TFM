@startuml

class MainActivity {
    + APP_NAME: static String "TFM_PoseTest"
    + ZIP_NAME: static String "TFM_PoseTest.zip"
    + outputFolderFile: File

    # void onCreate(Bundle)
    - void executeModels()
    - void generateOutputZipFile()

}

abstract class TensorFlowLiteModel {
    # NUM_KEYPOINTS_PREDICTION: static int 17
    # mainActivity: MainActivity
    # component: TextView
    # modelName: String
    # fileModelName: String
    # outputPredictionsFileName: String
    # outputPerformanceFileName: String
    # imageFileNamesList: List<String>
    # imagePredictionsMap: HashMap<String, float[]>
    # modelPerformanceMap: HashMap<String, String>
    # imageProcessor: ImageProcessor

    - List<String> readImageFileNames()
    # void writeResultsToFiles()
    # void writePredictionsToFile()
    - void writePerformanceToFile()
}

class Movenet extends TensorFlowLiteModel {
    + TYPE_LIGHTNING: static int 1
    + TYPE_THUNDER: static int 2
    + DATA_TYPE_UINT8: static int 1
    + DATA_TYPE_FLOAT16: static int 2
    + DATA_TYPE_FLOAT32: static int 3
    - modelDataType: DataType
    - inputWidth: int
    - inputHeight: int

    # Movenet(MainActivity, int TYPE, int DATA_TYPE)
    + void run()
}

class BlazePose extends TensorFlowLiteModel {
    + TYPE_LITE: static int 1
    + TYPE_FULL: static int 2
    + TYPE_HEAVY: static int 3
    - modelDataType: DataType
    - inputWidth: int 256
    - inputHeight: int 256
    - COCO_BLAZEPOSE_KEYPOINTS_MAP: Map<Integer, Integer>

    # BlazePose(MainActivity, int TYPE)
    + void run()
}

class Yolo extends TensorFlowLiteModel {
    + TYPE_NANO: static int 1
    + TYPE_SMALL: static int 2
    + TYPE_MEDIUM: static int 3
    - modelDataType: DataType
    - inputWidth: int 320
    - inputHeight: int 320

    # Yolo(MainActivity, int TYPE)
    + void run()
}

@enduml